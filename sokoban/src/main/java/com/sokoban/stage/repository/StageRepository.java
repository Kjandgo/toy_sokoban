package com.sokoban.stage.repository;

import com.sokoban.stage.aggregate.Stage;
import com.sokoban.stream.MyOutPut;

import java.io.*;
import java.util.ArrayList;

public class StageRepository {
    private final ArrayList<Stage> stages = new ArrayList<>();
    private final File file = new File("src/main/java/com/sokoban/stage/db/stageDB.dat");

    public StageRepository() {
       getStage();
    }

    public void insertStage() {
        Stage stage = new Stage();
        stage.setStageNo(1);
        char[][] arr = new char[][]{
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 0
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 1
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 2
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 3
                {' ',' ',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 4
                {' ',' ',' ',' ',' ',' ',' ','■',' ','■',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 5
                {' ',' ',' ',' ',' ',' ',' ','■',' ','■','■','■','■',' ',' ',' ',' ',' ',' ',' '},  // 6
                {' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ','■',' ',' ',' ',' ',' ',' ',' '},  // 7
                {' ',' ',' ',' ',' ','■',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ',' ',' '},  // 8
                {' ',' ',' ',' ',' ','■','■','■','■',' ','■',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 9
                {' ',' ',' ',' ',' ',' ',' ',' ','■',' ','■',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 10
                {' ',' ',' ',' ',' ',' ',' ',' ','■','■','■',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 11
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 12
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 13
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 14
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 15
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 16
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 17
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},  // 18
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}}; // 19
        //        0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
        /*
         * ● : 상자
         * ○ : 목적지
         * ■ : 벽
         * ◎ : 목적지에 도착한 상자
         * ⊙ : 플레이어
        * */
        boolean[][] box = new boolean[20][20];
        boolean[][] boxArea = new boolean[20][20];
        boxArea[5][8]=true;
        boxArea[7][11]=true;
        boxArea[8][6]=true;
        boxArea[10][9]=true;
        box[6][8]=true;
        box[7][10]=true;
        box[8][7]=true;
        box[9][9]=true;
        stage.setBox(box);
        stage.setBoxArea(boxArea);
        stage.setPlayerXAxis(8);
        stage.setPlayerYAxis(9);
        stage.setBoxCount(4);
        stage.setStageMap(arr);
        stages.add(stage);
        setStage(stages);
    }

    private void setStage(ArrayList<Stage> stageArr) {
        ObjectOutputStream moo = null;
        try {
            moo = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(file)));
            for(Stage stage : stageArr) {
                moo.writeObject(stage);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }finally{
            try {
                if(moo!=null)moo.close();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
    }

    private void getStage(){
        ObjectInputStream ois = null;
        try {
            ois = new ObjectInputStream(new BufferedInputStream(new FileInputStream(file)));
            while(true){
                stages.add((Stage)ois.readObject());
            }
        } catch(EOFException e){

        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }

    }

    public Stage selectStage(int stageNumber) {
        for(Stage stage : stages) {
            if(stage.getStageNo() == stageNumber) {
                return stage;
            }
        }
        return null;
    }
}

/*
0 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
1 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
2 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
3 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
4 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
5 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
6 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
7 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
8 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
9 {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
10{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
11{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
12{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
13{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
14{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
15{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
16{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
17{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
18{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
19{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}};
 */